name: fleet-agent_0.9.0-multi-platform
on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/fleet-agent_0.9.0-multi-platform.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login in AliYun Registry
        uses: docker/login-action@v1
        with:
          registry: registry-intl.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUNHUB_USERNAME }}
          password: ${{ secrets.ALIYUNHUB_TOKEN }}
          
      # 这个流程只复制了当前平台的子镜像（比如 amd64），
      # 推过去的 v2.8.2-multi 实际上不是 multi-arch 镜像。
      # 正确方式是用 `docker buildx imagetools create` 合并多个架构的镜像。
      #
      #- name: Build and push
      #  run: |
      #    docker manifest inspect rancher/fleet-agent:v0.9.0 | jq '.manifests[].platform'
      #    docker pull  rancher/fleet-agent:v0.9.0
      #    docker tag  rancher/fleet-agent:v0.9.0 registry-intl.cn-hangzhou.aliyuncs.com/fky357/fleet-agent:v0.9.0-multi
      #    docker push registry-intl.cn-hangzhou.aliyuncs.com/fky357/fleet-agent:v0.9.0-multi
          
      # GitHub Actions 中正确转存一个多架构（multi-arch）的镜像到阿里云容器镜像服务（ACR），
      # 不能简单地 docker pull + tag + push，否则只会推送当前 runner 架构（通常是 amd64）的那一个子镜像。
      - name: Mirror multi-arch image to Aliyun ACR
        run: |
          docker buildx create --name multi-builder --use || docker buildx use multi-builder
          docker buildx imagetools create \
          --tag registry-intl.cn-hangzhou.aliyuncs.com/fky357/fleet-agent:v0.9.0-multi \
          docker.io/rancher/fleet-agent:v0.9.0
          
      # 用于验证推送的镜像是否支持 arm64
      - name: Check pushed image platforms
        run: |
          docker manifest inspect registry-intl.cn-hangzhou.aliyuncs.com/fky357/fleet-agent:v0.9.0-multi | jq '.manifests[].platform'
